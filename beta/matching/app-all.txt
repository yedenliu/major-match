################################################################################
#   Import Modules
################################################################################
from pdb import find_function
from re import split
from flask import (Flask, render_template, make_response, url_for, request,
                   redirect, flash, session, send_from_directory, jsonify)
from werkzeug.utils import secure_filename
app = Flask(__name__)

import cs304dbi as dbi
import random
from prepared_queries import *

################################################################################
app.secret_key = 'your secret here'
# replace that with a random key
app.secret_key = ''.join([ random.choice(('ABCDEFGHIJKLMNOPQRSTUVXYZ' +
                                          'abcdefghijklmnopqrstuvxyz' +
                                          '0123456789'))
                           for i in range(20) ])

# This gets us better error messages for certain common request errors
app.config['TRAP_BAD_REQUEST_ERRORS'] = True


################################################################################
#   Routing functions
################################################################################
@app.route('/', methods=['GET','POST'])
def index():
    conn = dbi.connect()
    if request.method == 'GET':
        depts = get_depts(conn)
        return render_template('index.html', page_title='Home', depts=depts)
    else:
        for n in range(0, 32): # range is the n# of total courses they can input
            dept = request.form.get('dept-'+str(n))
            cnum = request.form.get('cnum-'+str(n))
            if dept not in [None, ''] and cnum not in [None, '']:
                cnum = cnum.upper().strip()
                
                # if course doesnt exist
                if not check_course_exists(conn, dept, cnum):
                    flash(str(dept) + ' ' + str(cnum) + 
                          " doesn't exist in our database")
                # if course does exist
                insert_data(conn, dept, cnum)
        results = major_match(conn)
        course_matches = matched_courses(conn)        
        delete_form_data(conn)
        
        # get all the courses in each department
        dept_courses = (
        [(get_dept_courses(conn, results[i][2])) for i in range(len(results))]
        )

        courses_to_take_dict = {
            results[i][0]: dept_courses[i] for i in range(len(results))
        }

        # find the % of courses that have been taken for each matched major
        percentage = [
            format((results[i][1] / len(dept_courses[i])), '.0') 
            for i in range(len(results))
            ]
        p = [(int((float(x)*100)),'') for x in percentage]
        # results = (major, 
        #            count matched courses, 
        #            dept_id, percent courses taken,
        #            empty string)
        results = [results[i]+ tuple(p[i]) for i in range(len(results))]

        # put the courses with the majors they fulfill 
        courses_taken_dict = {
            course_matches[i][1]:[] for i in range(len(course_matches))
        }
        for i in range(len(course_matches)):
            courses_taken_dict[course_matches[i][1]].append(
                course_matches[i][0]
            )

        # (-) courses taken from dept courses and put still needed into dict
        for major in courses_to_take_dict:
            # get the taken courses and subtract from the dept courses
            courses_to_take_dict[major] = list(
                set(courses_to_take_dict[major])-set(courses_taken_dict[major])
                )
        return render_template('results.html',
                                page_title='Results',
                                results = results,
                                course_matches = course_matches,
                                courses_to_take_dict = courses_to_take_dict
                                )

@app.route('/contact/')
def contact():
    return render_template('contact.html',
                            page_title='Contact Us!')

################################################################################
@app.before_first_request
def init_db():
    dbi.cache_cnf()
    # set this local variable to 'wmdb' or your personal or team db
    db_to_use = 'majormatch_db' 
    dbi.use(db_to_use)
    print('will connect to {}'.format(db_to_use))

if __name__ == '__main__':
    import sys, os
    if len(sys.argv) > 1:
        # arg, if any, is the desired port number
        port = int(sys.argv[1])
        assert(port>1024)
    else:
        port = os.getuid()
    app.debug = True
    app.run('0.0.0.0',port)
import cs304dbi as dbi

'''
1. Accept the dept abbr and course number from form data --> put into DB 
2. Match course to database courses 
3. Get majors on matched courses 
4. Get count of each major that is listed the most 
'''

def get_depts(conn):
    curs = dbi.cursor(conn)
    sql =   ''' select distinct dept 
                from courses 
                where dept <> ""
                order by dept asc 
            '''
    curs.execute(sql)
    deptsTups = curs.fetchall()
    deptsList = [i[0] for i in deptsTups]
    return deptsList

def find_cid(conn, dept, cnum):
    curs = dbi.cursor(conn)
    sql = '''   select cid from courses
                where dept = %s and cnum = %s
            '''
    curs.execute(sql, [dept, cnum])
    return curs.fetchone()

def insert_data(conn, dept, cnum):
    curs = dbi.cursor(conn)
    if dept != None and cnum != None:
        cid = find_cid(conn, dept, cnum)
        sql = '''   insert into form_data(dept, cnum, cid)
                    values (%s, %s, %s)
                ''' 
        curs.execute(sql, [dept, cnum, cid])
        conn.commit()

def check_course_exists(conn, dept, cnum):
    curs = dbi.cursor(conn)
    sql = '''   select cid from courses
                where dept = %s and cnum = %s
            '''
    curs.execute(sql, [dept, cnum])
    return len(curs.fetchall()) > 0

def major_match(conn):
    curs = dbi.cursor(conn)
    sql = '''   select programs.name, 
                count(major_pairs.dept_id), 
                major_pairs.dept_id from programs
                inner join major_pairs using(dept_id)
                inner join form_data using(cid)
                group by major_pairs.dept_id
                order by count(major_pairs.dept_id) DESC
                limit 5
            ''' 
    curs.execute(sql)
    return curs.fetchall()

def matched_courses(conn):
    curs = dbi.cursor(conn)
    sql = '''   select courses.name, programs.name
                from courses
                inner join form_data using(cid)
                inner join major_pairs using(cid)
                inner join programs using(dept_id)
                order by programs.name
            ''' 
    curs.execute(sql)
    return curs.fetchall()

def delete_form_data(conn):
    curs = dbi.cursor(conn)
    sql = 'delete from form_data'
    curs.execute(sql)
    conn.commit()

def get_dept_courses(conn, dept_id):
    '''
    Finds the courses that count towards majors in a department 
    
    Param - connection object, department 
    Return - list of courses 
    '''
    curs = dbi.cursor(conn)
    
    sql =   ''' select dept, cnum, courses.name, courses.cid,
                courses.units, courses.max_enroll,
                courses.prereq, courses.instruct,
                courses.dr, courses.sem_offered,
                courses.year_offered
                from courses 
                inner join major_pairs using(cid)
                inner join programs using (dept_id)
                where dept_id = %s
            '''
    curs.execute(sql, [dept_id])
    return curs.fetchall()
<!doctype html>
<html lang='en'>
<head>
    <meta charset='utf-8'>
    <!-- for mobile-friendly pages -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="Major Match Team" content="">
    <title>{{ page_title }}</title>
    <link href="{{url_for('static', filename = 'style.css')}}" rel='stylesheet'>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="jquery-3.6.0.min.js"></script> 
</head>

<body>

<main>

{% block navbar %}
<nav>
    <a href="{{ url_for('index') }}">
        <button class="nav-btn">HOME</button>
    </a>
    <a href="https://cs.wellesley.edu/majormatch-admin/">
        <button class="nav-btn">ADMIN</button>
    </a>
    <a href="{{ url_for('contact') }}">
        <button class="nav-btn">CONTACT</button>
    </a>
</nav>
{% endblock %}

<div class="header-container">
{% block header %}
<!-- insert title of page -->
{% endblock %}
</div>

{% with messages = get_flashed_messages() %}
{% if messages %}
<div id="messages">
    {% for msg in messages %}
    <p>{{msg}}</p>
    {% endfor %}
</div>
{% endif %}
{% endwith %}

{% block main_content %}
<!-- put main content here -->
{% endblock %}

<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
{% block end_scripts %}
{% endblock %}

</main>

</body>
</html>
{% extends "base.html" %}

{% block header %}
<h1>CONTACT US</h1>
<h2>If you have any questions or suggestions, please use this form to reach us. We would love to hear advice on how to improve our website.</h2>
<newline></newline>
<p style="color: rgb(82, 82, 82); text-align: center">This website was made for a CS 304 Final Project (Spring 2022). Our team consists of Eden Liu ('23), Kat Swint ('22), Julie Fucarino ('22), and Hannah Whellan ('22)</p>

<!-- major-match-team@wellesley.edu -->
{% endblock %}

{% block main_content %}
<h2>Send us an email at: major-match-team@wellesley.edu</h2>
<div class="contact">
    <form id="contact-form" action="mailto:major-match-team@wellesley.edu" method="post" enctype="text/plain">
        <label for="name">Name:</label>
        <input type="text" name="Name" id="name"><br>
        <label for="email">E-mail:</label>
        <input type="text" name="Email" id="email"><br>
        <label for="msg"> Message:</label>
        <input type="text" name="Message" id="msg"><br><br>
        <input type="submit" value="Send">
    </form> 
</div>

{% endblock %}{% extends "base.html" %}

{% block header %}
<h1>WELLESLEY MAJOR MATCHING</h1>
<h2>Enter in courses to see the major requirements you have fulfilled! The order does not matter.</h2>
{% endblock %}

{% block main_content %}
<form method="POST" action="{{ url_for('index') }}">
    <div class="flex-container">
        <!-- YEAR 1 (8 courses) -->
        <div class="flex-form-container">
            <h2>YEAR 1</h2>
            <div class="year-1">
                {% for i in range(8) %}
                <div class="class-input">
                    <label for="dept-{{i}}" style="padding-right:10px">Dept</label>
                    <select name="dept-{{i}}" id="dept-{{i}}" style="color: black;">
                        <option value="dept">Select</option>
                        {% for dept in depts %}
                            <option value="{{dept}}">{{dept}}</option>
                        {% endfor %}
                    </select>
                    
                    <label for="cnum-{{i}}" style="padding-left:10px">Course #</label>
                    <input type="text" name="cnum-{{i}}" id="cnum-{{i}}" placeholder="Type">
                    
                </div>
                {% endfor %}
            </div>
        </div>
        
        <!-- YEAR 2 (8 courses) -->
        <div class="flex-form-container">
            <h2>YEAR 2</h2>
            <div class="year-2">
                {% for i in range(8,16) %}
                <div class="class-input">
                    <label for="dept-{{i}}" style="padding-right:10px">Dept</label>
                    <select name="dept-{{i}}" id="dept-{{i}}" style="color: black;">
                        <option value="dept">Select</option>
                        {% for dept in depts %}
                            <option value="{{dept}}">{{dept}}</option>
                        {% endfor %}
                    </select>
                    
                    <label for="cnum-{{i}}" style="padding-left:10px">Course #</label>
                    <input type="text" name="cnum-{{i}}" id="cnum-{{i}}" placeholder="Type">
                    
                </div>
                {% endfor %}
            </div>
        </div>

        <!-- YEAR 3 (8 courses) -->
        <div class="flex-form-container">
            <h2>YEAR 3</h2>
            <div class="year-3">
                {% for i in range(16,24) %}
                <div class="class-input">
                    <label for="dept-{{i}}" style="padding-right:10px">Dept</label>
                    <select name="dept-{{i}}" id="dept-{{i}}" style="color: black;">
                        <option value="dept">Select</option>
                        {% for dept in depts %}
                            <option value="{{dept}}">{{dept}}</option>
                        {% endfor %}
                    </select>
                    
                    <label for="cnum-{{i}}" style="padding-left:10px">Course #</label>
                    <input type="text" name="cnum-{{i}}" id="cnum-{{i}}" placeholder="Type">
                    
                </div>
                {% endfor %}
            </div>
        </div>


        <!-- YEAR 4 (8 courses) -->
        <div class="flex-form-container">
            <h2>YEAR 4</h2>
            <div class="year-4">
                {% for i in range(24, 32) %}
                <div class="class-input">
                    <label for="dept-{{i}}" style="padding-right:10px">Dept</label>
                    <select name="dept-{{i}}" id="dept-{{i}}" style="color: black;">
                        <option value="dept">Select</option>
                        {% for dept in depts %}
                            <option value="{{dept}}">{{dept}}</option>
                        {% endfor %}
                    </select>
                    
                    <label for="cnum-{{i}}" style="padding-left:10px">Course #</label>
                    <input type="text" name="cnum-{{i}}" id="cnum-{{i}}" placeholder="Type">
                    
                </div>
                {% endfor %}
            </div>
        </div>
    </div>
    <div class="submit-btn"><input type='submit' value='Match Me!'> </div>
</form>

<p style="margin-top:25px; color: rgb(95, 94, 94); text-align: center;">DISCLAIMERS: No summer courses, cross-registered courses, and only 32 course slots available</p>
<p style="margin-top:25px; color: rgb(95, 94, 94); text-align: center;">If you have any questions or feedback, please use our contact form!</p>
{% endblock %}{% extends "base.html" %}

{% block header %}
<h1>RESULTS</h1>
{% endblock %}

{% block main_content %}

<h2  style="margin: auto; text-align:center; font-weight:bolder">These are your top matched majors</h2>
<h2  style="margin: auto; text-align:center; ">See what % of classes you've taken of the available department courses!</h2>

<ul>
<div class="flex-container" id="myModal-flex">
    {% for major in results %}

        <div class="major-container">
            <h2 class="major-name">{{ major[0] }}</h2>
            <div style="position: relative;">
                <div class="skill-container">
                    <div class="skills" style="width: {{major[3]}}%; background-color: #04AA6D; border-radius: 10px;">{{major[3]}}%</div>
                </div>
                <button class="modal-btn">See More</button>
            </div>
        </div>
    {% endfor %}

    <!-- The Modal -->
    {% for major in results %}
        <div id="myModal-{{major[0]}}" class="modal">
            <!-- Modal content -->  
            <div class="modal-content">
                <div class="close"><span class="close-{{ major[0] }}">&times;</span></div>
                <h2 class="major-name">{{ major[0] }}</h2>
                <div class="flex-container-modal">
                    <div class="course-div">
                        <h3>Courses You Have Taken</h3>
                        {% for course in course_matches %}
                            {% if major[0] == course[1] %}
                                <ul class="listed-courses">{{ course[0] }}</ul>
                            {% endif %}
                        {% endfor %}
                    </div>

                    <div class="course-div">
                        <h3>Courses You Can Take</h3>
                            {% for major_key in courses_to_take_dict %}
                                {% if major[0] == major_key %}
                                <div style="overflow:scroll; height: 25vw;">
                                    {% for c in courses_to_take_dict[major_key]%}
                                    <div class="popup">
                                    <ul class="listed-courses">{{ c[2] }}
                                        <span>
                                            <h2>{{ c[0] }} {{ c[1] }}</h2><br>
                                            <ul>
                                                <li>Units: {{ c[6]}} </li>
                                                <li>Max. Enrollment: {{ c[7]}} </li>
                                                <li>Prereqs.: {{ c[8]}} </li>
                                                <li>Instructor: {{ c[9]}} </li>
                                                <li>Dist. Req.: {{ c[10]}} </li>
                                                <li>Sem. Typically Offered: {{ c[11]}} </li>
                                                <li>Sem. Offered This Year: {{ c[12]}} </li>
                                            </ul>
                                        </span>
                                    </ul>
                                    </div>
                                    {% endfor %}
                                </div>
                                {% endif %}
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
    {% endfor %}

    <script>
        $("#myModal-flex").one().on('click','button', function (event) {
            // When the user clicks the button, open the modal 
            var clickee = event.target;
            majorName = clickee.parentNode.parentNode.getElementsByClassName('major-name')[0].innerHTML
            // Get the modal
            var modal = document.getElementById('myModal-'+majorName);
            modal.style.display = "block";
            // Get the button that opens the modal
            var btn = document.getElementById("modal-btn");
            // Get the <span> element that closes the modal
            var span = document.getElementsByClassName("close-"+majorName)[0];
            // When the user clicks on <span> (x), close the modal
            span.onclick = function() {
                modal.style.display = "none";
            }
            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function(event) {
                if (event.target == modal) {
                modal.style.display = "none";
                }
            }
        });
    </script>
</div>
</ul>


{% endblock %}
/********** HTML FILE **********/
* {
    box-sizing: border-box;
    font-family: "Arial", "Arial Black";
}

/********** BODY **********/
html, body{
    height: 100%;
    width: 100%;
    background-color: #d5eafc;
}

/********** MAIN **********/
main{
    height:95%;
    width: 95%;
    margin: auto;
    padding-top:10px;
}

/********** STYLE BASE TEMPLATE **********/
h1 {
    font-size: 55px;
    text-align: center;
    font-weight: bolder;
    color: #415a75;
    font-family: 'Arial Black';
    width: 95%;
    padding: 30px;
    margin: auto;
}

h2 {
    text-align: center;
    color:#415a75;
    font-size: large;
    margin-top: 0px;
    margin-bottom: 0px;
}

p {
    font-size: 17px;
}

#messages {
    color: rgb(140, 13, 13);
}

.nav-btn {
    color: white;
    font-size: large;
    text-decoration: none;
    background-color: rgb(95, 95, 95);
    border-radius: 5px;
    border: none;
    padding-left: 8px;
    padding-right: 8px;
    padding-top: 5px;
    padding-bottom: 5px;
}

.nav-btn:hover {
    background-color: #000;
}

::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
    color: black;
    opacity: 1; /* Firefox */
  }
  
/********** STYLE SKILLSBARS **********/
/* Container for skill bars */
.skill-container {
    width: 100%; /* Full width */
    background-color: #ddd; /* Grey background */
    border-radius: 10px;

}
  
.skills {
    text-align: right; /* Right-align text */
    padding-top: 10px; /* Add top padding */
    padding-bottom: 10px; /* Add bottom padding */
    color: black; /* White text color */
    font-weight: bold;
    background-color: rgb(198, 148, 0);
    border-radius: 10px;
}
/********** STYLE POPUP **********/
.popup ul span {
	display: none;
}

.popup ul:hover span{ 
    display: flex;
	width: 500px;
	padding: 10px;
	color: rgb(0, 0, 0);
	background: rgb(230, 230, 230);
	text-align: left;
	border: 1px solid rgb(102, 102, 102);
}

/********** STYLE RESULTS **********/
#modal-flex{
    padding: 2px;
}

.listed-courses{
    margin-bottom: 6px;
    position: relative;
    top: 2px;
    padding: 7px;
    width: 500px;
    overflow: scroll;
}

.course-div {
    border-radius: 10px;
    border-width: 1px;
    border-style: dashed;
}

.major-name{
    padding-bottom: 10px;
}

.modal-btn{
    position: relative;
    margin-top: 20px;
    bottom: 10px;
    margin-left: 35%;
    background-color: rgb(255, 250, 233);
    font-size: medium;
    font-weight: bolder;
    color: rgb(198, 148, 0);
    border: 1px black dashed;
    border-radius: 5px;
}

.modal-btn:hover{
    background-color: #415a75;
    border-style: solid;
    color: white;
}

.major-container {
    justify-content: center;
    position: relative;
    width: 250px;
    margin: 6px;
    padding: 5px;
    background-color: white;
    border-radius: 10px;
    border-width: 1px;
    border-style: solid;
}

/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
}
  
/* Modal Content */
.modal-content {
    background-color: white;
    margin: auto;
    padding: 20px;
    border-radius: 10px;
    border-width: 1px;
    padding: 5px;
    border-style: solid;
    width: 80%;
    text-align: center;
}

/* The Close Button */
.close {
    color: #aaaaaa;
    float: left;
    font-size: 28px;
    font-weight: bold;
}

.close:hover, .close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}

.flex-container-modal {
    display: inline-flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 10px;
}

.flex-container-modal > div {
    margin: 20px;
}

/********** STYLE FORM **********/
form {
    text-align: center;
}

.flex-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    padding-top: 30px;
}

.flex-form-container {
    padding-top: 8px;
    padding-bottom: 2px;
    background-color: white;
    border-radius: 10px;
    margin: 6px;
    padding-right: 5px;
    padding-left: 5px;
    border-width: 1px;
    border-style: dashed;
}

.class-input {
    display: flex;
    flex-wrap: wrap;
    margin: 10px;
}

input {
    margin-right: 5px;
    margin-left: 21px;
}

.year-1 {
    margin: 5px;
    background-color: #ffaaaa;
    padding: 10px;
    border-radius: 10px;
}

.year-2 {
    margin: 5px;
    background-color: #daeab3;
    padding: 10px;
    border-radius: 10px;
}

.year-3 {
    margin: 5px;
    border-radius: 10px;
    background-color: #ffedb4;
    padding: 10px;
}

.year-4 {
    margin: 5px;
    background-color: #edd5ff;
    padding: 10px;
    border-radius: 10px;
}

/* Text input on forms */
input[type=text] {
    width: 72px;
    color: gray;
    border-color: black;
    border-width: 1px;
}

/* Form submit button button */
input[type='submit'] {
    background-color: white;
    font-size: x-large;
    font-weight: bolder;
    color: #415a75;
    border: 1px black dashed;
    border-radius: 5px;
    padding-left: 15px;
    padding-right: 15px;
    margin-top: 20px;
    padding-top: 5px;
    padding-bottom: 5px;
}

/* Form submit hover */
input[type='submit']:hover {
      background-color: #415a75;
      border-style: solid;
      color: white;
}

select {
    color: gray;
    border-color: black;
    border-width: 1px;
}

/**** CONTACT FORM ****/

#contact-form input[type=text] {
    width: 200px; /* Full width */
    text-align: left;
    border: 1px solid #ccc; /* Gray border */
    border-radius: 4px; /* Rounded borders */
    margin-top: 6px;
    margin-bottom: 16px;
    resize: vertical;
}
  
#contact-form {
    justify-content: center;
    position: relative;
    width: 35vw;
    margin: auto;
    padding: 5px;
    background-color: white;
    border-radius: 10px;
    border-width: 1px;
    border-style: solid;
}

